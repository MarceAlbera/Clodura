{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","background-script/background.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","changeUrlHandler","details","urlMap","frameId","chrome","tabs","get","tabId","tab","status","undefined","url","id","includes","sendMessage","command","browserAction","onClicked","addListener","query","active","currentWindow","webNavigation","onHistoryStateUpdated","onCompleted","runtime","onMessage","message","callback","msg","data"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,MAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,MAAAO,KAAA,mBAAAF,EAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,GCuBA,SAASK,EAAiBC,GAExB,IAAMC,EAAS,GAEQ,IAApBD,EAAQE,SACTC,OAAOC,KAAKC,IAAIL,EAAQM,MAAO,SAACC,GAC9B,IACQD,EADW,aAAfC,EAAIC,aAAqCC,IAAZF,EAAIG,KAC7BJ,EAAQC,EAAII,GACbV,EAAOK,IAAUL,EAAOK,KAAWC,EAAIG,OAEtCH,EAAIG,IAAIE,SAAS,kBACjBL,EAAIG,IAAIE,SAAS,eACjBL,EAAIG,IAAIE,SAAS,kBAcVL,EAAIG,IAAIE,SAAS,iBACxBT,OAAOC,KAAKS,YAAYN,EAAII,GAAI,CAACG,QAAS,YAbxCP,EAAIG,IAAIE,SAAS,gBAChBL,EAAIG,IAAIE,SAAS,YACjBL,EAAIG,IAAIE,SAAS,0BAClBL,EAAIG,IAAIE,SAAS,gBACjBL,EAAIG,IAAIE,SAAS,iCACjBL,EAAIG,IAAIE,SAAS,oBACjBL,EAAIG,IAAIE,SAAS,6CACjBL,EAAIG,IAAIE,SAAS,6CACfT,OAAOC,KAAKS,YAAYN,EAAII,GAAI,CAACG,QAAS,UAE1CX,OAAOC,KAAKS,YAAYN,EAAII,GAAI,CAACG,QAAS,iBAOlDb,EAAOK,GAASC,EAAIG,UAEFD,IAAZF,EAAIG,MAAsBH,EAAIG,IAAIE,SAAS,yBAA2BL,EAAIG,IAAIE,SAAS,+BAC7DL,EAAIG,IAAIE,SAAS,yBACjBL,EAAIG,IAAIE,SAAS,yBACjBL,EAAIG,IAAIE,SAAS,2BACjBL,EAAIG,IAAIE,SAAS,2BACnDT,OAAOC,KAAKS,YAAYN,EAAII,GAAI,CAACG,QAAS,kBA7DlDX,OAAOY,cAAcC,UAAUC,YAAY,WACvCd,OAAOC,KAAKc,MAAM,CAACC,QAAQ,EAAMC,eAAe,GAAO,SAAChB,GACtDD,OAAOC,KAAKS,YAAYT,EAAK,GAAGO,GAAI,CAAEG,QAAS,iBAGrDX,OAAOkB,cAAcC,sBAAsBL,YAAYlB,GACvDI,OAAOkB,cAAcE,YAAYN,YAAYlB,GAE7CI,OAAOqB,QAAQC,UAAUR,YAAY,SAASS,EAASC,GASvD,IAAqBD,EARK,aAApBA,EAAQZ,SACVf,EAAiB,CAACG,QAAS,EAAGI,MAAOoB,EAAQpB,QAExB,kBAApBoB,EAAQZ,UAKQY,EAJLA,EAKdvB,OAAOC,KAAKc,MAAM,CAACC,QAAQ,EAAMC,eAAe,GAAO,SAAChB,GACtDD,OAAOC,KAAKS,YAAYT,EAAK,GAAGO,GAAI,CAAEG,QAASY,EAAQE,IAAKC,KAAKH,EAAQG","file":"background.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","chrome.browserAction.onClicked.addListener(() => {\n    chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n      chrome.tabs.sendMessage(tabs[0].id, { command: 'maximize' })\n    })\n});\nchrome.webNavigation.onHistoryStateUpdated.addListener(changeUrlHandler);\nchrome.webNavigation.onCompleted.addListener(changeUrlHandler);\n\nchrome.runtime.onMessage.addListener(function(message, callback) {\n  if (message.command === 'reScrape') {\n    changeUrlHandler({frameId: 0, tabId: message.tabId});\n  }\n  if(message.command === 'XHREventFired'){\n    sendMessage(message);\n  }\n});\n\nfunction sendMessage(message){\n  chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n    chrome.tabs.sendMessage(tabs[0].id, { command: message.msg, data:message.data })\n  })\n}\n\nfunction changeUrlHandler(details: any):void {\n  // setTimeout(() => {\n  const urlMap = {};\n  // console.log('frameID: ', details.frameId);\n  if(details.frameId === 0) {\n    chrome.tabs.get(details.tabId, (tab) => {\n      if (tab.status === 'complete' && tab.url !== undefined) {\n        const tabId = tab.id;\n        if (!urlMap[tabId] || urlMap[tabId] !== tab.url) {\n          // console.log('urlMap', urlMap);\n          if (tab.url.includes('linkedin.com/')\n          && !tab.url.includes('/showcase/')\n          && !tab.url.includes('miniProfileUrn')) {\n              if(\n                tab.url.includes('/mynetwork/') ||\n                (tab.url.includes('/jobs/') &&\n                !tab.url.includes('linkedin.com/company/')) ||\n                tab.url.includes('/messaging/') ||\n                tab.url.includes('linkedin.com/in/unavailable/') ||\n                tab.url.includes('/notifications/') ||\n                tab.url.includes('/sales/search/people?viewAllFilters=true') ||\n                tab.url.includes('/sales/search/company?viewAllFilters=true')){\n                  chrome.tabs.sendMessage(tab.id, {command: 'blank'});\n              } else {\n                  chrome.tabs.sendMessage(tab.id, {command: 'scrape_data'});\n              }\n          } else if(!tab.url.includes('linkedin.com')){\n              chrome.tabs.sendMessage(tab.id, {command: 'website'});\n          }\n          urlMap[tabId] = tab.url;\n        } else {\n          urlMap[tabId] = tab.url;\n        }\n      } else if(tab.url !== undefined && (tab.url.includes('sales/search/people?') || tab.url.includes('/sales/search/people/list/') ||\n                                          tab.url.includes('/sales/lists/people/') ||\n                                          tab.url.includes('sales/search/people#') ||\n                                          tab.url.includes('/sales/search/company?') ||\n                                          tab.url.includes('/sales/lists/company/'))){\n        chrome.tabs.sendMessage(tab.id, {command: 'scrape_data'});\n      }\n    });\n  }\n// }, 6000)\n\n}\n\n// function changeUrlHandler2(details: any):void {\n//   const urlMap = {};\n//   // console.log('frameID: ', details.frameId);\n//   if(details.frameId === 0) {\n//     chrome.tabs.get(details.tabId, (tab) => {\n//       if (tab.status === 'complete' && tab.url !== undefined) {\n//         const tabId = tab.id;\n//         // if (!urlMap[tabId] || urlMap[tabId] !== tab.url) {\n//           // console.log('urlMap', urlMap);\n//           if (tab.url.includes('linkedin.com/')\n//           && !tab.url.includes('/showcase/')\n//           && !tab.url.includes('/sales/search/people?viewAllFilters=true')) {\n//               if(\n//                 tab.url.includes('/mynetwork/') ||\n//                 (tab.url.includes('/jobs/') &&\n//                 !tab.url.includes('linkedin.com/company/')) ||\n//                 tab.url.includes('/messaging/') ||\n//                 tab.url.includes('linkedin.com/in/unavailable/') ||\n//                 tab.url.includes('/notifications/')){\n//                   chrome.tabs.sendMessage(tab.id, {command: 'blank'});\n//               } else {\n//                   chrome.tabs.sendMessage(tab.id, {command: 'scrape_data'});\n//               }\n//           } else if(!tab.url.includes('linkedin.com')){\n//               chrome.tabs.sendMessage(tab.id, {command: 'website'});\n//           }\n//           urlMap[tabId] = tab.url;\n//         // } else {\n//         //   urlMap[tabId] = tab.url;\n//         // }\n//       } else if(tab.url !== undefined && (tab.url.includes('sales/search/people?') || tab.url.includes('/sales/search/people/list/') ||\n//                                           tab.url.includes('/sales/lists/people/') ||\n//                                           tab.url.includes('/sales/search/company?') ||\n//                                           tab.url.includes('/sales/lists/company/'))){\n//         chrome.tabs.sendMessage(tab.id, {command: 'scrape_data'});\n//       }\n//     });\n//   }\n// }\n"]}